// Declaration of Motor Controller PINs
#define MFR_A_PIN	11  // FRONT RIGHT MOTOR
#define MFR_B_PIN	12 
#define MFR_PWM_PIN     13 	// PULSE WIDTH MODULATION PIN

#define MFL_A_PIN	5	//FRONT LEFT MOTOR
#define MFL_B_PIN 	6
#define MFL_PWM_PIN     7	// PULSE WIDTH MODULATION PIN

#define MBR_A_PIN	9	//BACK RIGHT MOTOR
#define MBR_B_PIN	10
#define MBR_PWM_PIN	8	// PULSE WIDTH MODULATION PIN

#define MBL_A_PIN	3	//BACK LEFT MOTOR
#define MBL_B_PIN	4
#define MBL_PWM_PIN	2 	// PULSE WIDTH MODULATION PIN 

// Declaration of Parallax IR Line follower PINs
#define IRL_PIN_s0	22
#define IRL_PIN_s1	23
#define IRL_PIN_s2	24
#define IRL_PIN_s3	25
#define IRL_PIN_s4	26
#define IRL_PIN_s5	27
#define IRL_PIN_s6	28
#define IRL_PIN_s7	29



void setup()
{
	Serial.begin(9600);
	// Setting up Motor PINs
	pinMode(MFR_A_PIN,OUTPUT);
	pinMode(MFR_B_PIN,OUTPUT);
	pinMode(MFR_PWM_PIN,OUTPUT);// Controls speed- Pulse width modulation
	
	// Motor Front Left Side
	pinMode(MFL_A_PIN,OUTPUT);
	pinMode(MFL_B_PIN,OUTPUT);
	pinMode(MFL_PWM_PIN,OUTPUT);
	 
	// Motor Back Right Side
	pinMode(MBR_A_PIN,OUTPUT);
	pinMode(MBR_B_PIN,OUTPUT);
	pinMode(MBR_PWM_PIN,OUTPUT);
	
	// Motor Back Left Side
	pinMode(MBL_A_PIN,OUTPUT);
	pinMode(MBL_B_PIN,OUTPUT);
	pinMode(MBL_PWM_PIN,OUTPUT);

	pinMode(IRL_PIN_s0, INPUT);
	pinMode(IRL_PIN_s1, INPUT);
	pinMode(IRL_PIN_s3, INPUT);
	pinMode(IRL_PIN_s4, INPUT);
	pinMode(IRL_PIN_s5, INPUT);
	pinMode(IRL_PIN_s6, INPUT);
	pinMode(IRL_PIN_s7, INPUT);
	
}

int IRL_in;
int diff = 0;
int mPower = map(50, 0, 100, 80, 190);
int x=100;
int a=90;
void loop()
{
	
	IRL_in=0;
	for(int i = 0; i <= 7; i++)
	{
		IRL_in = (IRL_in << 1) + digitalRead(IRL_PIN_s7 - i);

	}
	
	switch(IRL_in)
	{
case 0b11111100: case 0b11111110: case 0b11111101:      // pivot right         
//DutyCycleA := 65         DutyCycleB := 0 
Serial.println("pivot right");
                        digitalWrite(MFR_A_PIN, LOW);
			digitalWrite(MFR_B_PIN, HIGH);
			
			digitalWrite(MBR_A_PIN, HIGH);
			digitalWrite(MBR_B_PIN, LOW);
		
			digitalWrite(MFL_A_PIN, LOW);
			digitalWrite(MFL_B_PIN, HIGH);
		
			digitalWrite(MBL_A_PIN, LOW);
			digitalWrite(MBL_B_PIN, HIGH);
		
			analogWrite(MFR_PWM_PIN, x-20);
			analogWrite(MFL_PWM_PIN, x+15);
			
			analogWrite(MBR_PWM_PIN, a-20);
			analogWrite(MBL_PWM_PIN, x+15);
break;

case 0b11111000: case 0b11111001: case 0b11111011:// Slight right
//DutyCycleA := 60         DutyCycleB := 0 
Serial.println("Slight right");
                         digitalWrite(MFR_A_PIN, LOW);
			digitalWrite(MFR_B_PIN, HIGH);
			
			digitalWrite(MBR_A_PIN, HIGH);
			digitalWrite(MBR_B_PIN, LOW);
		
			digitalWrite(MFL_A_PIN, LOW);
			digitalWrite(MFL_B_PIN, HIGH);
		
			digitalWrite(MBL_A_PIN, LOW);
			digitalWrite(MBL_B_PIN, HIGH);
		
			analogWrite(MFR_PWM_PIN, x-20);
			analogWrite(MFL_PWM_PIN, x+10);
			
			analogWrite(MBR_PWM_PIN, a-20);
			analogWrite(MBL_PWM_PIN, x+10);
break;

case 0b11110001: case 0b11110011:                // Adjust right 
//DutyCycleA := 55          DutyCycleB := 0  
Serial.println("Adjust right ");
                        digitalWrite(MFR_A_PIN, LOW);
			digitalWrite(MFR_B_PIN, HIGH);
			
			digitalWrite(MBR_A_PIN, HIGH);
			digitalWrite(MBR_B_PIN, LOW);
		
			digitalWrite(MFL_A_PIN, LOW);
			digitalWrite(MFL_B_PIN, HIGH);
		
			digitalWrite(MBL_A_PIN, LOW);
			digitalWrite(MBL_B_PIN, HIGH);
		
			analogWrite(MFR_PWM_PIN, x-20);
			analogWrite(MFL_PWM_PIN, x+5);
			
			analogWrite(MBR_PWM_PIN, a-20);
			analogWrite(MBL_PWM_PIN, x+5);
break;

case 0b11100000: case 0b11110000: // turn right
                         Serial.println("turn right");
                         digitalWrite(MFR_A_PIN, LOW);
			digitalWrite(MFR_B_PIN, HIGH);
			
			digitalWrite(MBR_A_PIN, HIGH);
			digitalWrite(MBR_B_PIN, LOW);
		
			digitalWrite(MFL_A_PIN, LOW);
			digitalWrite(MFL_B_PIN, HIGH);
		
			digitalWrite(MBL_A_PIN, LOW);
			digitalWrite(MBL_B_PIN, HIGH);
		
			analogWrite(MFR_PWM_PIN, x-20);
			analogWrite(MFL_PWM_PIN, x+30);
			
			analogWrite(MBR_PWM_PIN, a-20);
			analogWrite(MBL_PWM_PIN, x+30);
break;

case 0b11100011: case 0b11100111: case 0b11000111: case 0b11000011:     // Straight 
//DutyCycleA := DutyCycleB := 50 
Serial.println("Straight ");
                        digitalWrite(MFR_A_PIN, LOW);
			digitalWrite(MFR_B_PIN, HIGH);
			
			digitalWrite(MBR_A_PIN, HIGH);
			digitalWrite(MBR_B_PIN, LOW);
		
			digitalWrite(MFL_A_PIN, LOW);
			digitalWrite(MFL_B_PIN, HIGH);
		
			digitalWrite(MBL_A_PIN, LOW);
			digitalWrite(MBL_B_PIN, HIGH);
		
			analogWrite(MFR_PWM_PIN, x);
			analogWrite(MFL_PWM_PIN, x);
			
			analogWrite(MBR_PWM_PIN, a);
			analogWrite(MBL_PWM_PIN, x);
break;

case 0b00000111: case 0b00001111: //turn left
                        Serial.println("turn left");
                        digitalWrite(MFR_A_PIN, LOW);
			digitalWrite(MFR_B_PIN, HIGH);
			
			digitalWrite(MBR_A_PIN, HIGH);
			digitalWrite(MBR_B_PIN, LOW);
		
			digitalWrite(MFL_A_PIN, LOW);
			digitalWrite(MFL_B_PIN, HIGH);
		
			digitalWrite(MBL_A_PIN, LOW);
			digitalWrite(MBL_B_PIN, HIGH);
		
			analogWrite(MFR_PWM_PIN, x+30);
			analogWrite(MFL_PWM_PIN, x-20);
			
			analogWrite(MBR_PWM_PIN, a+30);
			analogWrite(MBL_PWM_PIN, x-20);
break;

case 0b10001111: case 0b11001111:                 // Adjust left  
//DutyCycleA := 0         DutyCycleB := 55   
Serial.println("Adjust left");
                        digitalWrite(MFR_A_PIN, LOW);
			digitalWrite(MFR_B_PIN, HIGH);
			
			digitalWrite(MBR_A_PIN, HIGH);
			digitalWrite(MBR_B_PIN, LOW);
		
			digitalWrite(MFL_A_PIN, LOW);
			digitalWrite(MFL_B_PIN, HIGH);
		
			digitalWrite(MBL_A_PIN, LOW);
			digitalWrite(MBL_B_PIN, HIGH);
		
			analogWrite(MFR_PWM_PIN, x+5);
			analogWrite(MFL_PWM_PIN, x-20);
			
			analogWrite(MBR_PWM_PIN, a+5);
			analogWrite(MBL_PWM_PIN, x-20);
break;

case 0b00011111: case 0b10011111: case 0b11011111:       // Slight left
//DutyCycleA := 0         DutyCycleB := 60  
Serial.println("Slight left");
                        digitalWrite(MFR_A_PIN, LOW);
			digitalWrite(MFR_B_PIN, HIGH);
			
			digitalWrite(MBR_A_PIN, HIGH);
			digitalWrite(MBR_B_PIN, LOW);
		
			digitalWrite(MFL_A_PIN, LOW);
			digitalWrite(MFL_B_PIN, HIGH);
		
			digitalWrite(MBL_A_PIN, LOW);
			digitalWrite(MBL_B_PIN, HIGH);
		
			analogWrite(MFR_PWM_PIN, x+10);
			analogWrite(MFL_PWM_PIN, x-20);
			
			analogWrite(MBR_PWM_PIN, a+10);
			analogWrite(MBL_PWM_PIN, x-20);
break;

case 0b00111111: case 0b10111111: case 0b01111111:      // Pivot left  
//DutyCycleA := 0         DutyCycleB := 65  
Serial.println("Pivot left");
                         digitalWrite(MFR_A_PIN, LOW);
			digitalWrite(MFR_B_PIN, HIGH);
			
			digitalWrite(MBR_A_PIN, HIGH);
			digitalWrite(MBR_B_PIN, LOW);
		
			digitalWrite(MFL_A_PIN, LOW);
			digitalWrite(MFL_B_PIN, HIGH);
		
			digitalWrite(MBL_A_PIN, LOW);
			digitalWrite(MBL_B_PIN, HIGH);
		
			analogWrite(MFR_PWM_PIN, x+15);
			analogWrite(MFL_PWM_PIN, x-20);
			
			analogWrite(MBR_PWM_PIN, a+15);
			analogWrite(MBL_PWM_PIN, x-20);
break;

default :                                  // Anything else, slowly move forward   
//DutyCycleA := DutyCycleB := 20  
//    PWM.Duty(MotorA, DutyCycleA, 50)  
//turn right
Serial.println(IRL_in, BIN);

                        digitalWrite(MFR_A_PIN, LOW);
			digitalWrite(MFR_B_PIN, HIGH);
			
			digitalWrite(MBR_A_PIN, HIGH);
			digitalWrite(MBR_B_PIN, LOW);
		
			digitalWrite(MFL_A_PIN, LOW);
			digitalWrite(MFL_B_PIN, HIGH);
		
			digitalWrite(MBL_A_PIN, LOW);
			digitalWrite(MBL_B_PIN, HIGH);
		
			analogWrite(MFR_PWM_PIN, x);
			analogWrite(MFL_PWM_PIN, x);
			
			analogWrite(MBR_PWM_PIN, a);
			analogWrite(MBL_PWM_PIN, x);
}
}
